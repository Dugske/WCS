"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[696],{5988:t=>{t.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/WCS/ru/docs/tutorial/intro","docId":"tutorial/intro","unlisted":false},{"type":"link","label":"Installation","href":"/WCS/ru/docs/tutorial/installation","docId":"tutorial/installation","unlisted":false},{"type":"category","label":"\u041e\u0441\u043d\u043e\u0432\u044b","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Client / Server Setup","href":"/WCS/ru/docs/tutorial/basics/client-server","docId":"tutorial/basics/client-server","unlisted":false},{"type":"link","label":"Character Setup","href":"/WCS/ru/docs/tutorial/basics/character","docId":"tutorial/basics/character","unlisted":false}],"href":"/WCS/ru/docs/category/basics"},{"type":"category","label":"\u0421\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u0438","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create an ability","href":"/WCS/ru/docs/tutorial/skills/create-a-skill","docId":"tutorial/skills/create-a-skill","unlisted":false},{"type":"link","label":"Applying abilities","href":"/WCS/ru/docs/tutorial/skills/applying","docId":"tutorial/skills/applying","unlisted":false},{"type":"link","label":"Define The Behavior","href":"/WCS/ru/docs/tutorial/skills/define-the-behaviour","docId":"tutorial/skills/define-the-behaviour","unlisted":false},{"type":"link","label":"Replication Explained","href":"/WCS/ru/docs/tutorial/skills/replication-explained","docId":"tutorial/skills/replication-explained","unlisted":false},{"type":"link","label":"Start an ability","href":"/WCS/ru/docs/tutorial/skills/start-an-ability","docId":"tutorial/skills/start-an-ability","unlisted":false},{"type":"link","label":"Holdable Abilities","href":"/WCS/ru/docs/tutorial/skills/holdable","docId":"tutorial/skills/holdable","unlisted":false},{"type":"link","label":"Messages","href":"/WCS/ru/docs/tutorial/skills/messages","docId":"tutorial/skills/messages","unlisted":false},{"type":"link","label":"Ability State","href":"/WCS/ru/docs/tutorial/skills/state","docId":"tutorial/skills/state","unlisted":false}],"href":"/WCS/ru/docs/category/abilities"},{"type":"category","label":"\u0421\u0442\u0430\u0442\u0443\u0441 \u042d\u0444\u0444\u0435\u043a\u0442\u044b","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create a status effect","href":"/WCS/ru/docs/tutorial/statuses/create-a-status","docId":"tutorial/statuses/create-a-status","unlisted":false},{"type":"link","label":"Humanoid Data","href":"/WCS/ru/docs/tutorial/statuses/humanoid-data","docId":"tutorial/statuses/humanoid-data","unlisted":false},{"type":"link","label":"Configuring Humanoid Data","href":"/WCS/ru/docs/tutorial/statuses/configure-data","docId":"tutorial/statuses/configure-data","unlisted":false},{"type":"link","label":"Applying a status","href":"/WCS/ru/docs/tutorial/statuses/applying","docId":"tutorial/statuses/applying","unlisted":false}],"href":"/WCS/ru/docs/category/status-effects"},{"type":"category","label":"\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Concept of Metadata","href":"/WCS/ru/docs/tutorial/extras/metadata","docId":"tutorial/extras/metadata","unlisted":false},{"type":"link","label":"Syntactical Differences","href":"/WCS/ru/docs/tutorial/extras/differences","docId":"tutorial/extras/differences","unlisted":false},{"type":"link","label":"Movesets","href":"/WCS/ru/docs/tutorial/extras/movesets","docId":"tutorial/extras/movesets","unlisted":false}],"href":"/WCS/ru/docs/category/extras"}],"apiSidebar":[{"type":"link","label":"WCS","href":"/WCS/ru/docs/api/wcs","docId":"api/wcs","unlisted":false},{"type":"link","label":"Server","href":"/WCS/ru/docs/api/server","docId":"api/server","unlisted":false},{"type":"link","label":"Client","href":"/WCS/ru/docs/api/client","docId":"api/client","unlisted":false},{"type":"link","label":"Character","href":"/WCS/ru/docs/api/character","docId":"api/character","unlisted":false},{"type":"link","label":"Skill","href":"/WCS/ru/docs/api/skill","docId":"api/skill","unlisted":false},{"type":"link","label":"StatusEffect","href":"/WCS/ru/docs/api/statusEffect","docId":"api/statusEffect","unlisted":false}]},"docs":{"api/character":{"id":"api/character","title":"Character","description":"[Moveset]: ../tutorial/extras/movesets.md","sidebar":"apiSidebar"},"api/client":{"id":"api/client","title":"Client","description":"RegisterDirectory(directory)","sidebar":"apiSidebar"},"api/server":{"id":"api/server","title":"Server","description":"RegisterDirectory(directory)","sidebar":"apiSidebar"},"api/skill":{"id":"api/skill","title":"Skill","description":"[Timer]//www.npmjs.com/package/@rbxts/timer","sidebar":"apiSidebar"},"api/statusEffect":{"id":"api/statusEffect","title":"StatusEffect","description":"[Humanoid Data]: ../tutorial/statuses/humanoid-data.md","sidebar":"apiSidebar"},"api/wcs":{"id":"api/wcs","title":"WCS","description":"[Moveset]: ../tutorial/extras/movesets.md","sidebar":"apiSidebar"},"tutorial/basics/character":{"id":"tutorial/basics/character","title":"Character Setup","description":"WCS provides a special Character class that acts as a wrapper for a player\'s character model.","sidebar":"tutorialSidebar"},"tutorial/basics/client-server":{"id":"tutorial/basics/client-server","title":"Client / Server Setup","description":"Start off your setup by creating two special WCS objects: Client and Server handlers.","sidebar":"tutorialSidebar"},"tutorial/extras/differences":{"id":"tutorial/extras/differences","title":"Syntactical Differences","description":"There are several syntactical differences in WCS between Luau version and TypeScript version.","sidebar":"tutorialSidebar"},"tutorial/extras/metadata":{"id":"tutorial/extras/metadata","title":"Concept of Metadata","description":"Metadata of a skill / statusEffect is basically a state that is replicated from server to client.","sidebar":"tutorialSidebar"},"tutorial/extras/movesets":{"id":"tutorial/extras/movesets","title":"Movesets","description":"Movesets is a powerful concept in WCS. It allows you to group/manage your abilities easily by composing them into special WCS objects.","sidebar":"tutorialSidebar"},"tutorial/installation":{"id":"tutorial/installation","title":"Installation","description":"You can currently install WCS to your project with 3 different methods:","sidebar":"tutorialSidebar"},"tutorial/intro":{"id":"tutorial/intro","title":"Introduction","description":"WCS is a handy framework that provides useful abstraction for your combat systems.","sidebar":"tutorialSidebar"},"tutorial/skills/applying":{"id":"tutorial/skills/applying","title":"Applying abilities","description":"To apply your ability to a character in WCS you need to instantiate an ability class providing a Character Class Instance.","sidebar":"tutorialSidebar"},"tutorial/skills/create-a-skill":{"id":"tutorial/skills/create-a-skill","title":"Create an ability","description":"A WCS ability/skill is a class that, when instantiated, gets bound to a character. To define the behavior of your ability you override the default methods.","sidebar":"tutorialSidebar"},"tutorial/skills/define-the-behaviour":{"id":"tutorial/skills/define-the-behaviour","title":"Define The Behavior","description":"Now, after we created our first ability we need to define its custom behavior.","sidebar":"tutorialSidebar"},"tutorial/skills/holdable":{"id":"tutorial/skills/holdable","title":"Holdable Abilities","description":"Sometimes, you want to create an ability that you can use for an unknown amount of time, depending on user input.","sidebar":"tutorialSidebar"},"tutorial/skills/messages":{"id":"tutorial/skills/messages","title":"Messages","description":"Messages are a powerful concept in WCS that allow the client and server sides of your ability to communicate between eachother.","sidebar":"tutorialSidebar"},"tutorial/skills/replication-explained":{"id":"tutorial/skills/replication-explained","title":"Replication Explained","description":"Before we continue with starting a skill, it\'s really important to know some stuff","sidebar":"tutorialSidebar"},"tutorial/skills/start-an-ability":{"id":"tutorial/skills/start-an-ability","title":"Start an ability","description":"Let\'s bind our ability start to some user input.","sidebar":"tutorialSidebar"},"tutorial/skills/state":{"id":"tutorial/skills/state","title":"Ability State","description":"Ability State is an object represents current state of an ability and can be obtained with GetState() method or inside StateChanged event.","sidebar":"tutorialSidebar"},"tutorial/statuses/applying":{"id":"tutorial/statuses/applying","title":"Applying a status","description":"Applying statuses to characters is very similar to applying abilities.","sidebar":"tutorialSidebar"},"tutorial/statuses/configure-data":{"id":"tutorial/statuses/configure-data","title":"Configuring Humanoid Data","description":"To set the Humanoid Data of your status effect you can use a built-in method SetHumanoidData().","sidebar":"tutorialSidebar"},"tutorial/statuses/create-a-status":{"id":"tutorial/statuses/create-a-status","title":"Create a status effect","description":"Status Effects in WCS are classes that represent side-effects. The usage is very similar to skills, you also define their behavior by","sidebar":"tutorialSidebar"},"tutorial/statuses/humanoid-data":{"id":"tutorial/statuses/humanoid-data","title":"Humanoid Data","description":"Now, let\'s apply a new side effect to our status. When the stun is active on our character we want to set its","sidebar":"tutorialSidebar"}}}')}}]);